{"version":3,"sources":["store/types.ts","firebase.ts","store/actions/todoActions.ts","components/TodoForm.tsx","styles.ts","components/TodoItem.tsx","components/TodoList.tsx","components/Wrapper.tsx","App.tsx","store/reducers/todoReducer.ts","store/reducers/rootReducer.ts","store/index.ts","index.tsx"],"names":["TodoActions","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","todoLoading","type","TODO_LOADING","todoError","e","TODO_ERROR","payload","message","TodoForm","dispatch","useDispatch","useState","text","setText","noValidate","autoComplete","onSubmit","preventDefault","completed","collection","add","then","docRef","get","doc","undefined","newTodo","id","String","data","Boolean","ADD_TODO","catch","addTodoAction","Box","display","alignItems","mb","flexGrow","TextField","label","multiline","rowsMax","fullWidth","value","onChange","target","IconButton","useStyles","makeStyles","theme","todoItem","textDecoration","inputHolder","position","top","left","width","height","minHeight","btnGroup","marginLeft","spacing","fadeEnter","opacity","fadeEnterActive","transition","fadeExit","fadeExitActive","textHolder","TodoItem","completeTodo","deleteTodo","changeTodo","classes","inputText","setInputText","isOpen","setIsOpen","textRef","React","useRef","inputRef","ListItem","className","ListItemIcon","aria-label","color","onClick","CSSTransition","in","timeout","unmountOnExit","nodeRef","classNames","enter","enterActive","exit","exitActive","ref","variant","size","ButtonGroup","Button","onDoubleClick","ListItemText","primary","ListItemSecondaryAction","edge","TodoList","todo","useSelector","state","todoRef","exists","completeStatus","update","COMPLETE_TODO","completeTodoAction","delete","REMOVE_TODO","deleteTodoAction","CHANGE_TODO","changeTodoAction","List","todos","map","el","key","find","textAlign","py","querySnapshot","forEach","REMOVE_ALL_COMPLETED","Typography","Wrapper","children","overflow","CssBaseline","Container","maxWidth","align","App","themeMode","setThemeMode","useEffect","todoArr","push","GET_TODO","localStorage","getItem","createMuiTheme","palette","ThemeProvider","right","Chip","icon","newTheme","setItem","loading","zIndex","LinearProgress","error","Alert","severity","length","initialState","todoReducer","action","filter","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2HAAYA,E,mJAAAA,K,oBAAAA,E,4BAAAA,E,wBAAAA,E,oBAAAA,E,0BAAAA,E,8BAAAA,E,0BAAAA,E,6CAAAA,M,wBCaZC,IAASC,cATc,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAKF,IAAMC,EAAKR,IAASS,YC6LdC,EAAc,WACzB,MAAO,CACLC,KAAMZ,EAAYa,eAITC,EAAY,SAACC,GACxB,MAAO,CACLH,KAAMZ,EAAYgB,WAClBC,QAASF,EAAEG,U,OCjKAC,EAzCY,WACzB,IAAMC,EAAWC,cADc,EAEPC,mBAAiB,IAFV,mBAExBC,EAFwB,KAElBC,EAFkB,KAoB/B,OACE,sBAAMC,YAAU,EAACC,aAAa,MAAMC,SAbhB,SAACZ,IACrBA,EAAEa,iBACW,KAATL,KAKFH,ED4GuB,SAAC,GAGkC,IAF9DG,EAE6D,EAF7DA,KACAM,EAC6D,EAD7DA,UAEA,OAAO,SAACT,GACNA,EAAST,KAETF,EAAGqB,WAAW,SACXC,IAAI,CACHR,OACAM,cAEDG,MAAK,SAACC,GACLA,EAAOC,MAAMF,MAAK,SAACG,GACjB,QAAYC,IAARD,EAAmB,CAAC,IAAD,IACfE,EAAe,CACnBC,GAAIH,EAAIG,GACRf,KAAMgB,OAAM,OAACJ,QAAD,IAACA,GAAD,UAACA,EAAKK,cAAN,aAAC,EAAajB,MAC1BM,UAAWY,QAAO,OAACN,QAAD,IAACA,GAAD,UAACA,EAAKK,cAAN,aAAC,EAAaX,YAElCT,EAAS,CACPR,KAAMZ,EAAY0C,SAClBzB,QAASoB,WAKhBM,OAAM,SAAC5B,GACNK,EAASN,EAAUC,QCxIZ6B,CAJgB,CACvBrB,KAAMA,EACNM,WAAW,KAGbL,EAAQ,MAKV,SACE,eAACqB,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,aAAaC,GAAI,EAAhD,UACE,cAACH,EAAA,EAAD,CAAKI,SAAS,IAAd,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,YACNC,WAAS,EACTC,QAAS,EACTC,WAAS,EACTC,MAAOhC,EACPiC,SA1BY,SAACzC,GACrBS,EAAQT,EAAE0C,OAAOF,YA4Bb,cAACG,EAAA,EAAD,CAAY9C,KAAK,SAAjB,SACE,cAAC,IAAD,Y,6KCLK+C,EAtCGC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,SAAU,CACR,cAAe,CACbC,eAAgB,iBAGpBC,YAAa,CACXlB,QAAS,OACTmB,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRC,UAAW,QAEbC,SAAU,CACRD,UAAW,OACXE,WAAYX,EAAMY,QAAQ,IAE5BC,UAAW,CACTC,QAAS,GAEXC,gBAAiB,CACfD,QAAS,EACTE,WAAY,uBAEdC,SAAU,CACRH,QAAS,GAEXI,eAAgB,CACdJ,QAAS,EACTE,WAAY,iBAEdG,WAAY,CACVZ,MAAO,Y,SC6HIa,EAtI2B,SAAC,GAOpC,IANL3C,EAMI,EANJA,GACAT,EAKI,EALJA,UACAN,EAII,EAJJA,KACA2D,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEMC,EAAU1B,IADZ,EAE8BrC,mBAAiBC,GAF/C,mBAEG+D,EAFH,KAEcC,EAFd,OAGwBjE,oBAAkB,GAH1C,mBAGGkE,EAHH,KAGWC,EAHX,KAIEC,EAAUC,IAAMC,OAAO,MACvBC,EAAWF,IAAMC,OAAO,MA8B9B,OACE,eAACE,EAAA,EAAD,CACEC,UAAS,UAAKV,EAAQvB,SAAb,aAA0BjC,EAAY,YAAc,IAD/D,UAGE,cAACmE,EAAA,EAAD,UACE,cAACtC,EAAA,EAAD,CACEuC,aAAW,SACXC,MAAM,UACNC,QAdgB,WACtBZ,EAAahE,GACbkE,GAAU,GACVP,EAAa5C,IAQT,SAKGT,EAAY,cAAC,IAAD,IAAsB,cAAC,IAAD,QAIvC,eAACgB,EAAA,EAAD,CACEoB,SAAS,WACThB,SAAS,IACToB,OAAO,OACPC,UAAU,OACVxB,QAAQ,OACRC,WAAW,SANb,UAQE,cAACqD,EAAA,EAAD,CACEC,GAAIb,EACJc,QAAS,IACTC,eAAa,EACbC,QAASX,EACTY,WAAY,CACVC,MAAOrB,EAAQX,UACfiC,YAAatB,EAAQT,gBACrBgC,KAAMvB,EAAQP,SACd+B,WAAYxB,EAAQN,gBATxB,SAYE,sBAAKgB,UAAWV,EAAQrB,YAAa8C,IAAKjB,EAA1C,UACE,cAAChD,EAAA,EAAD,CAAKI,SAAS,IAAd,SACE,cAACC,EAAA,EAAD,CACEK,MAAO+B,EACP9B,SA5DQ,SAACzC,GACrBwE,EAAaxE,EAAE0C,OAAOF,QA4DVwD,QAAQ,WACRzD,WAAS,EACT0D,KAAK,YAGT,eAACC,EAAA,EAAD,CACEF,QAAQ,YACRb,MAAM,UACNc,KAAK,QACLjB,UAAWV,EAAQd,SAJrB,UAME,cAAC2C,EAAA,EAAD,CAAQf,QA/DK,WACL,KAAdb,IACFF,EAAW9C,EAAIgD,GACfG,GAAU,KA4DF,SACE,cAAC,IAAD,MAEF,cAACyB,EAAA,EAAD,CAAQf,QAvEC,WACnBZ,EAAahE,GACbkE,GAAU,IAqEA,SACE,cAAC,IAAD,cAMR,cAACW,EAAA,EAAD,CACEC,IAAKb,EACLc,QAAS,IACTC,eAAa,EACbC,QAASd,EACTe,WAAY,CACVC,MAAOrB,EAAQX,UACfiC,YAAatB,EAAQT,gBACrBgC,KAAMvB,EAAQP,SACd+B,WAAYxB,EAAQN,gBATxB,SAYE,qBAAKgB,UAAWV,EAAQL,WAAY8B,IAAKpB,EAASyB,cApG/B,WACpBtF,GACH4D,GAAWD,IAkGP,SACE,cAAC4B,EAAA,EAAD,CAAcC,QAAS9F,WAK7B,cAAC+F,EAAA,EAAD,UACE,cAAC5D,EAAA,EAAD,CACE6D,KAAK,MACLtB,aAAW,SACXC,MAAM,YACNC,QAAS,kBAAMhB,EAAW7C,IAJ5B,SAME,cAAC,IAAD,YCtFKkF,EAvDY,WAAO,IAAD,MACzBpG,EAAWC,cACXoG,EAAOC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,QAE/CvC,EAAe,SAAC5C,GACpBlB,EJuB8B,SAChCkB,GAEA,OAAO,SAAClB,GACNA,EAAST,KAET,IAAMiH,EAAUnH,EAAGqB,WAAW,SAASK,IAAIG,GAC3CsF,EACG1F,MACAF,MAAK,SAACG,GACL,GAAIA,EAAI0F,OAAQ,CAAC,IAAD,EACRC,EAAc,UAAG3F,EAAIK,cAAP,aAAG,EAAYX,UAEnC+F,EACGG,OAAO,CACNlG,WAAYiG,IAEb9F,MAAK,WACJZ,EAAS,CACPR,KAAMZ,EAAYgI,cAClB/G,QAAS,CACPqB,KACAT,WAAYiG,QAKjBnF,OAAM,SAAC5B,GACNK,EAASN,EAAUC,WAI1B4B,OAAM,SAAC5B,GACNK,EAASN,EAAUC,QIxDdkH,CAAmB3F,KAGxB6C,EAAa,SAAC7C,GAClBlB,EJyD4B,SAC9BkB,GAEA,OAAO,SAAClB,GACNA,EAAST,KAETF,EAAGqB,WAAW,SACXK,IAAIG,GACJ4F,SACAlG,MAAK,WACJZ,EAAS,CACPR,KAAMZ,EAAYmI,YAClBlH,QAASqB,OAGZK,OAAM,SAAC5B,GACNK,EAASN,EAAUC,QIzEdqH,CAAiB9F,KAOtB8C,EAAa,SAAC9C,EAAYf,GAC9BH,EJyI4B,SAC9BkB,EACAf,GAEA,OAAO,SAACH,GACNA,EAAST,KAET,IAAMiH,EAAUnH,EAAGqB,WAAW,SAASK,IAAIG,GAC3CsF,EACG1F,MACAF,MAAK,SAACG,GACDA,EAAI0F,QACND,EACGG,OAAO,CACNxG,KAAMA,IAEPS,MAAK,WACJZ,EAAS,CACPR,KAAMZ,EAAYqI,YAClBpH,QAAS,CACPqB,KACAf,aAKLoB,OAAM,SAAC5B,GACNK,EAASN,EAAUC,UAI1B4B,OAAM,SAAC5B,GACNK,EAASN,EAAUC,QIzKduH,CAAiBhG,EAAIf,KAGhC,OACE,qCACE,cAACgH,EAAA,EAAD,oBACGd,EAAKe,aADR,aACG,EAAYC,KAAI,SAACC,GAChB,OACE,wBAAC,EAAD,2BACMA,GADN,IAEEC,IAAKD,EAAGpG,GACR4C,aAAcA,EACdC,WAAYA,EACZC,WAAYA,WAMnB,UAAAqC,EAAKe,aAAL,eAAYI,MAAK,SAAAF,GAAE,OAAIA,EAAG7G,cACzB,cAACgB,EAAA,EAAD,CAAKgG,UAAU,QAAQC,GAAI,EAA3B,SACE,cAAC5B,EAAA,EAAD,CAAQH,QAAQ,WAAWC,KAAK,QAAQb,QA1BrB,WACzB/E,GJgFK,SAACA,GACNA,EAAST,KAETF,EAAGqB,WAAW,SACXI,MACAF,MAAK,SAAC+G,GACLA,EAAcC,SAAQ,SAAC7G,GACjBA,EAAIK,OAAOX,WACbpB,EAAGqB,WAAW,SACXK,IAAIA,EAAIG,IACR4F,SACAvF,OAAM,SAAC5B,GACNK,EAASN,EAAUC,aAK5BiB,MAAK,WACJZ,EAAS,CACPR,KAAMZ,EAAYiJ,0BAGrBtG,OAAM,SAAC5B,GACNK,EAASN,EAAUC,WI9EjB,0CAIA,MAEH,UAAA0G,EAAKe,aAAL,eAAYI,MAAK,SAAAF,GAAE,OAAKA,EAAG7G,cAC1B,cAACgB,EAAA,EAAD,CAAKgG,UAAU,SAASC,GAAI,EAA5B,SACE,cAACI,EAAA,EAAD,CAAYnC,QAAQ,WAApB,2DAIA,S,kBC5CKoC,EAhBW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OACE,eAACvG,EAAA,EAAD,CAAKoB,SAAS,WAAWoF,SAAS,SAASjF,MAAM,OAAO0E,GAAI,EAA5D,UACE,cAACQ,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAAC3G,EAAA,EAAD,CAAKG,GAAI,EAAT,SACE,cAACkG,EAAA,EAAD,CAAYnC,QAAQ,KAAK0C,MAAM,SAASvD,MAAM,UAA9C,0BAIDkD,S,sCCgEMM,GAjEO,WAAO,IAAD,EACpBtI,EAAWC,cACXoG,EAAOC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,QAF3B,EAGQnG,mBAA2B,SAHnC,mBAGnBqI,EAHmB,KAGRC,EAHQ,KAK1BC,qBAAU,WACRzI,GNXK,SAACA,GACNA,EAAST,KAETF,EAAGqB,WAAW,SACXI,MACAF,MAAK,SAAC+G,GACL,GAAIA,EAAc/B,KAAM,CACtB,IAAI8C,EAAkB,GAEtBf,EAAcC,SAAQ,SAAC7G,GACrB2H,EAAQC,KAAK,CACXzH,GAAIH,EAAIG,GACRf,KAAMY,EAAIK,OAAOjB,KACjBM,UAAWM,EAAIK,OAAOX,eAI1BT,EAAS,CACPR,KAAMZ,EAAYgK,SAClB/I,QAAS6I,SAGX1I,EAAS,CACPR,KAAMZ,EAAYgK,SAClB/I,QAAS,UAId0B,OAAM,SAAC5B,GACNK,EAASN,EAAUC,UMhBmB,SAAtCkJ,aAAaC,QAAQ,aACvBN,EAAa,QAEbA,EAAa,WAId,IAEH,IAMM/F,EAAQsG,YAAe,CAC3BC,QAAS,CACPxJ,KAAM+I,KAIV,OACE,cAACU,EAAA,EAAD,CAAexG,MAAOA,EAAtB,SACE,eAAC,EAAD,WACE,cAAChB,EAAA,EAAD,CAAKoB,SAAS,WAAWC,IAAK,GAAIoG,MAAO,GAAzC,SACE,cAACC,EAAA,EAAD,CACErE,MAAM,UACNsE,KAAoB,UAAdb,EAAwB,cAAC,KAAD,IAAkB,cAAC,KAAD,IAChDxG,MAAqB,UAAdwG,EAAwB,cAAgB,aAC/CxD,QApBY,WACpB,IAAIsE,EAA2C,UAAdd,EAAwB,OAAS,QAClEC,EAAaa,GACbR,aAAaS,QAAQ,YAAaD,QAqB7BhD,EAAKkD,SACJ,cAAC9H,EAAA,EAAD,CAAKoB,SAAS,QAAQC,IAAI,IAAIC,KAAK,IAAIC,MAAM,OAAOwG,OAAO,QAA3D,SACE,cAACC,EAAA,EAAD,MAIJ,cAAC,EAAD,IAECpD,EAAKqD,OACJ,cAACjI,EAAA,EAAD,CAAKiG,GAAI,EAAT,SACE,cAACiC,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBvD,EAAKqD,YAGjC,UAACrD,EAAKe,aAAN,aAAC,EAAYyC,SACZ,cAACpI,EAAA,EAAD,CAAKiG,GAAI,EAAT,SACE,cAACiC,EAAA,EAAD,CAAOC,SAAS,OAAhB,2CAGJ,cAAC,EAAD,U,oCCrEFE,GAA0B,CAC9B1C,MAAO,KACPmC,SAAS,EACTG,MAAO,MAuEMK,GApEK,WAA0D,IAAD,IAAxDxD,EAAwD,uDAArCuD,GAAcE,EAAuB,uCAC3E,OAAQA,EAAOxK,MACb,KAAKZ,EAAYa,aACf,OAAO,2BAAK8G,GAAZ,IAAmBgD,SAAS,EAAMG,MAAO,OAE3C,KAAK9K,EAAYgB,WACf,OAAO,2BAAK2G,GAAZ,IAAmBmD,MAAOM,EAAOnK,QAAS0J,SAAS,IAErD,KAAK3K,EAAYgK,SACf,OAAO,2BAAKrC,GAAZ,IAAmBa,MAAO4C,EAAOnK,QAAS0J,SAAS,IAErD,KAAK3K,EAAYgI,cACf,OAAO,2BACFL,GADL,IAEEgD,SAAS,EACTnC,MAAOb,EAAMa,MAAN,UACHb,EAAMa,aADH,aACH,EAAaC,KAAI,SAACC,GAChB,OAAIA,EAAGpG,KAAO8I,EAAOnK,QAAQqB,GACpB,2BAAKoG,GAAZ,IAAgB7G,UAAWuJ,EAAOnK,QAAQY,YAGrC6G,KAET,OAGR,KAAK1I,EAAYmI,YACf,OAAO,2BACFR,GADL,IAEEgD,SAAS,EACTnC,MAAOb,EAAMa,MACTb,EAAMa,MAAM6C,QAAO,SAAC3C,GAAD,OAAQA,EAAGpG,KAAO8I,EAAOnK,WAC5C,OAGR,KAAKjB,EAAYiJ,qBACf,OAAO,2BACFtB,GADL,IAEEgD,SAAS,EACTnC,MAAOb,EAAMa,MAAQb,EAAMa,MAAM6C,QAAO,SAAC3C,GAAD,OAASA,EAAG7G,aAAa,OAGrE,KAAK7B,EAAY0C,SACf,OAAO,2BACFiF,GADL,IAEEgD,SAAS,EACTnC,MAAOb,EAAMa,MAAN,uBAAkBb,EAAMa,OAAxB,CAA+B4C,EAAOnK,UAAW,OAG5D,KAAKjB,EAAYqI,YACf,OAAO,2BACFV,GADL,IAEEgD,SAAS,EACTnC,MAAOb,EAAMa,MAAN,UACHb,EAAMa,aADH,aACH,EAAaC,KAAI,SAACC,GAChB,OAAIA,EAAGpG,KAAO8I,EAAOnK,QAAQqB,GACpB,2BAAKoG,GAAZ,IAAgBnH,KAAM6J,EAAOnK,QAAQM,OAGhCmH,KAET,OAER,QACE,OAAOf,ICjEE2D,GAJKC,2BAAgB,CAClC9D,KAAM0D,KCGOK,GAFDC,uBAAYH,GAAaI,+BAAoBC,2BAAgBC,QCC3EC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.c420610e.chunk.js","sourcesContent":["export enum TodoActions {\r\n  GET_TODO = 'GET_TODO',\r\n  TODO_LOADING = 'TODO_LOADING',\r\n  TODO_ERROR = 'TODO_ERROR',\r\n  ADD_TODO = 'ADD_TODO',\r\n  CHANGE_TODO = 'CHANGE_TODO',\r\n  COMPLETE_TODO = 'COMPLETE_TODO',\r\n  REMOVE_TODO = 'REMOVE_TODO',\r\n  REMOVE_ALL_COMPLETED = 'REMOVE_ALL_COMPLETED',\r\n}\r\n\r\nexport interface Todo {\r\n  id: string;\r\n  text: string;\r\n  completed: boolean;\r\n}\r\n\r\nexport interface TodoState {\r\n  todos: Todo[] | null;\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\ninterface GetTodo {\r\n  type: TodoActions.GET_TODO;\r\n  payload: Todo[] | null;\r\n}\r\n\r\ninterface TodoLoading {\r\n  type: TodoActions.TODO_LOADING;\r\n}\r\n\r\ninterface TodoError {\r\n  type: TodoActions.TODO_ERROR;\r\n  payload: string;\r\n}\r\n\r\ninterface AddTodo {\r\n  type: TodoActions.ADD_TODO;\r\n  payload: Todo;\r\n}\r\n\r\ninterface ChangeTodo {\r\n  type: TodoActions.CHANGE_TODO;\r\n  payload: {\r\n    id: string;\r\n    text: string;\r\n  };\r\n}\r\n\r\ninterface CompleteTodo {\r\n  type: TodoActions.COMPLETE_TODO;\r\n  payload: {\r\n    id: string;\r\n    completed: boolean;\r\n  };\r\n}\r\n\r\ninterface RemoveTodo {\r\n  type: TodoActions.REMOVE_TODO;\r\n  payload: string;\r\n}\r\n\r\ninterface RemoveAllCompleted {\r\n  type: TodoActions.REMOVE_ALL_COMPLETED;\r\n}\r\n\r\nexport type TodoAction =\r\n  | GetTodo\r\n  | TodoError\r\n  | AddTodo\r\n  | ChangeTodo\r\n  | CompleteTodo\r\n  | RemoveTodo\r\n  | TodoLoading\r\n  | RemoveAllCompleted;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCeER6YZTi2m3_EXoFq6sCTBCWiCYROihE',\r\n  authDomain: 'react-todo-2ad17.firebaseapp.com',\r\n  projectId: 'react-todo-2ad17',\r\n  storageBucket: 'react-todo-2ad17.appspot.com',\r\n  messagingSenderId: '807564659019',\r\n  appId: '1:807564659019:web:4b62c5f38d0190b8ba80ce',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = firebase.firestore();\r\n","import { NewTodo } from './../../components/TodoForm';\r\nimport { Todo, TodoAction, TodoActions } from '../types';\r\nimport { RootState } from '../reducers/rootReducer';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { db } from '../../firebase';\r\n\r\nexport const getTodo = (): ThunkAction<void, RootState, null, TodoAction> => {\r\n  return (dispatch) => {\r\n    dispatch(todoLoading());\r\n\r\n    db.collection('todos')\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        if (querySnapshot.size) {\r\n          let todoArr: Todo[] = [];\r\n\r\n          querySnapshot.forEach((doc) => {\r\n            todoArr.push({\r\n              id: doc.id,\r\n              text: doc.data().text,\r\n              completed: doc.data().completed,\r\n            });\r\n          });\r\n\r\n          dispatch({\r\n            type: TodoActions.GET_TODO,\r\n            payload: todoArr,\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: TodoActions.GET_TODO,\r\n            payload: null,\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        dispatch(todoError(e));\r\n      });\r\n  };\r\n};\r\n\r\nexport const completeTodoAction = (\r\n  id: string\r\n): ThunkAction<void, RootState, null, TodoAction> => {\r\n  return (dispatch) => {\r\n    dispatch(todoLoading());\r\n\r\n    const todoRef = db.collection('todos').doc(id);\r\n    todoRef\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          const completeStatus = doc.data()?.completed;\r\n\r\n          todoRef\r\n            .update({\r\n              completed: !completeStatus,\r\n            })\r\n            .then(() => {\r\n              dispatch({\r\n                type: TodoActions.COMPLETE_TODO,\r\n                payload: {\r\n                  id,\r\n                  completed: !completeStatus,\r\n                },\r\n              });\r\n            })\r\n\r\n            .catch((e) => {\r\n              dispatch(todoError(e));\r\n            });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        dispatch(todoError(e));\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteTodoAction = (\r\n  id: string\r\n): ThunkAction<void, RootState, null, TodoAction> => {\r\n  return (dispatch) => {\r\n    dispatch(todoLoading());\r\n\r\n    db.collection('todos')\r\n      .doc(id)\r\n      .delete()\r\n      .then(() => {\r\n        dispatch({\r\n          type: TodoActions.REMOVE_TODO,\r\n          payload: id,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        dispatch(todoError(e));\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteAllCompletedAction = (): ThunkAction<\r\n  void,\r\n  RootState,\r\n  null,\r\n  TodoAction\r\n> => {\r\n  return (dispatch) => {\r\n    dispatch(todoLoading());\r\n\r\n    db.collection('todos')\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          if (doc.data().completed) {\r\n            db.collection('todos')\r\n              .doc(doc.id)\r\n              .delete()\r\n              .catch((e) => {\r\n                dispatch(todoError(e));\r\n              });\r\n          }\r\n        });\r\n      })\r\n      .then(() => {\r\n        dispatch({\r\n          type: TodoActions.REMOVE_ALL_COMPLETED,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        dispatch(todoError(e));\r\n      });\r\n  };\r\n};\r\n\r\nexport const addTodoAction = ({\r\n  text,\r\n  completed,\r\n}: NewTodo): ThunkAction<void, RootState, null, TodoAction> => {\r\n  return (dispatch) => {\r\n    dispatch(todoLoading());\r\n\r\n    db.collection('todos')\r\n      .add({\r\n        text,\r\n        completed,\r\n      })\r\n      .then((docRef) => {\r\n        docRef.get().then((doc) => {\r\n          if (doc !== undefined) {\r\n            const newTodo:Todo = {\r\n              id: doc.id,\r\n              text: String(doc?.data()?.text),\r\n              completed: Boolean(doc?.data()?.completed),\r\n            }\r\n            dispatch({\r\n              type: TodoActions.ADD_TODO,\r\n              payload: newTodo,\r\n            });\r\n          }\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        dispatch(todoError(e));\r\n      });\r\n  };\r\n};\r\n\r\nexport const changeTodoAction = (\r\n  id: string,\r\n  text: string\r\n): ThunkAction<void, RootState, null, TodoAction> => {\r\n  return (dispatch) => {\r\n    dispatch(todoLoading());\r\n\r\n    const todoRef = db.collection('todos').doc(id);\r\n    todoRef\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          todoRef\r\n            .update({\r\n              text: text,\r\n            })\r\n            .then(() => {\r\n              dispatch({\r\n                type: TodoActions.CHANGE_TODO,\r\n                payload: {\r\n                  id,\r\n                  text\r\n                },\r\n              });\r\n            })\r\n\r\n            .catch((e) => {\r\n              dispatch(todoError(e));\r\n            });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        dispatch(todoError(e));\r\n      });\r\n  };\r\n};\r\n\r\nexport const todoLoading = (): TodoAction => {\r\n  return {\r\n    type: TodoActions.TODO_LOADING,\r\n  };\r\n};\r\n\r\nexport const todoError = (e: any): TodoAction => {\r\n  return {\r\n    type: TodoActions.TODO_ERROR,\r\n    payload: e.message,\r\n  };\r\n};\r\n","import { Box, IconButton, TextField } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTodoAction } from '../store/actions/todoActions';\r\n\r\nexport interface NewTodo {\r\n  text: string;\r\n  completed: boolean;\r\n}\r\n\r\nconst TodoForm: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [text, setText] = useState<string>('');\r\n\r\n  const changeHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (text !== '') {\r\n      const todoObj: NewTodo = {\r\n        text: text,\r\n        completed: false,\r\n      };\r\n      dispatch(addTodoAction(todoObj));\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form noValidate autoComplete='off' onSubmit={submitHandler}>\r\n      <Box display='flex' alignItems='flex-start' mb={3}>\r\n        <Box flexGrow='1'>\r\n          <TextField\r\n            label='Todo Text'\r\n            multiline\r\n            rowsMax={7}\r\n            fullWidth\r\n            value={text}\r\n            onChange={changeHandler}\r\n          />\r\n        </Box>\r\n        <IconButton type='submit'>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import { makeStyles, Theme } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  todoItem: {\r\n    '&.completed': {\r\n      textDecoration: 'line-through',\r\n    },\r\n  },\r\n  inputHolder: {\r\n    display: 'flex',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    minHeight: '100%'\r\n  },\r\n  btnGroup: {\r\n    minHeight: '100%',\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  fadeEnter: {\r\n    opacity: 0,\r\n  },\r\n  fadeEnterActive: {\r\n    opacity: 1,\r\n    transition: 'opacity 500ms 500ms',\r\n  },\r\n  fadeExit: {\r\n    opacity: 1,\r\n  },\r\n  fadeExitActive: {\r\n    opacity: 0,\r\n    transition: 'opacity 500ms'\r\n  },\r\n  textHolder: {\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import {\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Box,\r\n  TextField,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport React, { useState } from 'react';\r\nimport useStyles from '../styles';\r\nimport { Todo } from '../store/types';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\ninterface TodoItemProps extends Todo {\r\n  completeTodo: (id: string) => void;\r\n  deleteTodo: (id: string) => void;\r\n  changeTodo: (id: string, text: string) => void;\r\n}\r\n\r\nconst TodoItem: React.FC<TodoItemProps> = ({\r\n  id,\r\n  completed,\r\n  text,\r\n  completeTodo,\r\n  deleteTodo,\r\n  changeTodo,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [inputText, setInputText] = useState<string>(text);\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n  const textRef = React.useRef(null);\r\n  const inputRef = React.useRef(null);\r\n\r\n  const doubleClickHandler = () => {\r\n    if (!completed) {\r\n      setIsOpen(!isOpen);\r\n    }\r\n  };\r\n\r\n  const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    setInputText(text);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const setChangeHandler = () => {\r\n    if (inputText !== '') {\r\n      changeTodo(id, inputText);\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const completeHandler = () => {\r\n    setInputText(text);\r\n    setIsOpen(false);\r\n    completeTodo(id);\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      className={`${classes.todoItem}  ${completed ? 'completed' : ''}`}\r\n    >\r\n      <ListItemIcon>\r\n        <IconButton\r\n          aria-label='toggle'\r\n          color='primary'\r\n          onClick={completeHandler}\r\n        >\r\n          {completed ? <CheckCircleIcon /> : <RadioButtonUncheckedIcon />}\r\n        </IconButton>\r\n      </ListItemIcon>\r\n\r\n      <Box\r\n        position='relative'\r\n        flexGrow='1'\r\n        height='100%'\r\n        minHeight='40px'\r\n        display='flex'\r\n        alignItems='center'\r\n      >\r\n        <CSSTransition\r\n          in={isOpen}\r\n          timeout={1000}\r\n          unmountOnExit\r\n          nodeRef={inputRef}\r\n          classNames={{\r\n            enter: classes.fadeEnter,\r\n            enterActive: classes.fadeEnterActive,\r\n            exit: classes.fadeExit,\r\n            exitActive: classes.fadeExitActive,\r\n          }}\r\n        >\r\n          <div className={classes.inputHolder} ref={inputRef}>\r\n            <Box flexGrow='1'>\r\n              <TextField\r\n                value={inputText}\r\n                onChange={changeHandler}\r\n                variant='outlined'\r\n                fullWidth\r\n                size='small'\r\n              />\r\n            </Box>\r\n            <ButtonGroup\r\n              variant='contained'\r\n              color='primary'\r\n              size='small'\r\n              className={classes.btnGroup}\r\n            >\r\n              <Button onClick={setChangeHandler}>\r\n                <DoneIcon />\r\n              </Button>\r\n              <Button onClick={closeHandler}>\r\n                <CloseIcon />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition\r\n          in={!isOpen}\r\n          timeout={1000}\r\n          unmountOnExit\r\n          nodeRef={textRef}\r\n          classNames={{\r\n            enter: classes.fadeEnter,\r\n            enterActive: classes.fadeEnterActive,\r\n            exit: classes.fadeExit,\r\n            exitActive: classes.fadeExitActive,\r\n          }}\r\n        >\r\n          <div className={classes.textHolder} ref={textRef} onDoubleClick={doubleClickHandler}>\r\n            <ListItemText primary={text} />\r\n          </div>\r\n        </CSSTransition>\r\n      </Box>\r\n\r\n      <ListItemSecondaryAction>\r\n        <IconButton\r\n          edge='end'\r\n          aria-label='delete'\r\n          color='secondary'\r\n          onClick={() => deleteTodo(id)}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import { Box, Button, List, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeTodoAction,\r\n  completeTodoAction,\r\n  deleteAllCompletedAction,\r\n  deleteTodoAction,\r\n} from '../store/actions/todoActions';\r\nimport { RootState } from '../store/reducers/rootReducer';\r\nimport { Todo } from '../store/types';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoList: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const todo = useSelector((state: RootState) => state.todo);\r\n\r\n  const completeTodo = (id: string): void => {\r\n    dispatch(completeTodoAction(id));\r\n  };\r\n\r\n  const deleteTodo = (id: string): void => {\r\n    dispatch(deleteTodoAction(id));\r\n  };\r\n\r\n  const deleteAllCompleted = (): void => {\r\n    dispatch(deleteAllCompletedAction());\r\n  };\r\n\r\n  const changeTodo = (id: string, text: string): void => {\r\n    dispatch(changeTodoAction(id, text));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        {todo.todos?.map((el: Todo) => {\r\n          return (\r\n            <TodoItem\r\n              {...el}\r\n              key={el.id}\r\n              completeTodo={completeTodo}\r\n              deleteTodo={deleteTodo}\r\n              changeTodo={changeTodo}\r\n            />\r\n          );\r\n        })}\r\n      </List>\r\n\r\n      {todo.todos?.find(el => el.completed) ? (\r\n        <Box textAlign='right' py={2}>\r\n          <Button variant='outlined' size='small' onClick={deleteAllCompleted}>\r\n            Delete all completed todos\r\n          </Button>\r\n        </Box>\r\n      ) : null}\r\n\r\n      {todo.todos?.find(el => !el.completed) ? (\r\n        <Box textAlign='center' py={2}>\r\n          <Typography variant='overline'>\r\n            To change the todo double click on the item\r\n          </Typography>\r\n        </Box>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { Box, Container, CssBaseline, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst Wrapper: React.FC = ({ children }) => {\r\n  return (\r\n    <Box position='relative' overflow='hidden' width='100%' py={4}>\r\n      <CssBaseline />\r\n      <Container maxWidth='md'>\r\n        <Box mb={3}>\r\n          <Typography variant='h2' align='center' color=\"primary\">\r\n            Todos List\r\n          </Typography>\r\n        </Box>\r\n        {children}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import { Box, Chip, createMuiTheme, LinearProgress, ThemeProvider } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport TodoForm from './components/TodoForm';\r\nimport TodoList from './components/TodoList';\r\nimport Wrapper from './components/Wrapper';\r\nimport { getTodo } from './store/actions/todoActions';\r\nimport { RootState } from './store/reducers/rootReducer';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const todo = useSelector((state: RootState) => state.todo);\r\n  const [themeMode, setThemeMode] = useState<'light' | 'dark'>('light');\r\n\r\n  useEffect(() => {\r\n    dispatch(getTodo());\r\n\r\n    if (localStorage.getItem('themeMode') === 'dark') {\r\n      setThemeMode('dark');\r\n    } else {\r\n      setThemeMode('light');\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const switchHandler = () => {\r\n    let newTheme: 'light' | 'dark' = themeMode === 'light' ? 'dark' : 'light';\r\n    setThemeMode(newTheme);\r\n    localStorage.setItem('themeMode', newTheme);\r\n  };\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: themeMode,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Wrapper>\r\n        <Box position='absolute' top={16} right={16}>\r\n          <Chip\r\n            color='primary'\r\n            icon={themeMode === 'light' ? <WbSunnyIcon /> : <Brightness2Icon/>}\r\n            label={themeMode === 'light' ? 'light theme' : 'dark theme'}\r\n            onClick={switchHandler}\r\n          />\r\n        </Box>\r\n\r\n        {todo.loading && (\r\n          <Box position='fixed' top='0' left='0' width='100%' zIndex='modal'>\r\n            <LinearProgress />\r\n          </Box>\r\n        )}\r\n\r\n        <TodoForm />\r\n\r\n        {todo.error && (\r\n          <Box py={1}>\r\n            <Alert severity='error'>{todo.error}</Alert>\r\n          </Box>\r\n        )}\r\n        {!todo.todos?.length && (\r\n          <Box py={1}>\r\n            <Alert severity='info'>You don't have a todo list!</Alert>\r\n          </Box>\r\n        )}\r\n        <TodoList />\r\n      </Wrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { TodoState, TodoAction, TodoActions } from '../types';\r\n\r\nconst initialState: TodoState = {\r\n  todos: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst todoReducer = (state: TodoState = initialState, action: TodoAction) => {\r\n  switch (action.type) {\r\n    case TodoActions.TODO_LOADING:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case TodoActions.TODO_ERROR:\r\n      return { ...state, error: action.payload, loading: false };\r\n\r\n    case TodoActions.GET_TODO:\r\n      return { ...state, todos: action.payload, loading: false };\r\n\r\n    case TodoActions.COMPLETE_TODO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        todos: state.todos\r\n          ? state.todos?.map((el) => {\r\n              if (el.id === action.payload.id) {\r\n                return { ...el, completed: action.payload.completed };\r\n              }\r\n\r\n              return el;\r\n            })\r\n          : null,\r\n      };\r\n\r\n    case TodoActions.REMOVE_TODO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        todos: state.todos\r\n          ? state.todos.filter((el) => el.id !== action.payload)\r\n          : null,\r\n      };\r\n\r\n    case TodoActions.REMOVE_ALL_COMPLETED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        todos: state.todos ? state.todos.filter((el) => !el.completed) : null,\r\n      };\r\n\r\n    case TodoActions.ADD_TODO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        todos: state.todos ? [...state.todos, action.payload] : null,\r\n      };\r\n\r\n    case TodoActions.CHANGE_TODO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        todos: state.todos\r\n          ? state.todos?.map((el) => {\r\n              if (el.id === action.payload.id) {\r\n                return { ...el, text: action.payload.text };\r\n              }\r\n\r\n              return el;\r\n            })\r\n          : null,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoReducer;\r\n","import { combineReducers } from 'redux';\r\nimport todoReducer from './todoReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  todo: todoReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}